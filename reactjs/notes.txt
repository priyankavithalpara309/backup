notes:
=============

https://www.simplilearn.com/tutorials/reactjs-tutorial/what-is-reactjs
https://create-react-app.dev/docs/getting-started

=>angular is framwork and react js is library


React is JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called “components”.

ReactJS is an open-source front-end JavaScript library for building user interfaces. ReactJS is maintained by Facebook and a community of individual developers and companies. It is widely used as a base in building single-page websites and mobile applications. It is very easy to use, and it allows users to create reusable UI components.

React is a JavaScript-based UI development library. Facebook and an open-source developer community run it. Although React is a library rather than a language, it is widely used in web development. The library first appeared in May 2013 and is now one of the most commonly used frontend libraries for web development.


JSX:
=================

JSX stands for javascript xml

install nodejs is requried

without jsx in react :

it become more complex
ex:

function User()
{
	return React.createElement('div', null, React.createElement('H1',null,'Hello!!!'));
}
===================================
create new project:
-------------------

npx create-react-app my-app
cd my-app
npm start


classbase component:---
==================================

React class based components are the bread and butter of most modern web apps built in ReactJS.

-> 

props:
============================

Every component can have attributes similar to HTML attributes and each attribute’s value can be accessed inside the component using properties (props).

Props are properties to be used inside a component. They act as global object or variables which can be used inside the Component.

 The term "props" stands for "properties" and is used for passing data from one component to another. As opposed to state in React, props are read-only. So, the data coming from a parent component can't be changed by the child component.


state:
====================================

React components has a built-in state object.

Every time the state of an object changes, React re-renders the component to the browser

A state is an object that stores properties values for those attributed to a component that could change over some time. 

The state object is where you store property values that belongs to the component.
When the state object changes, the component re-renders.

State represents the value of a dynamic properties of a React component at a given instance. React provides a dynamic data store for each component.


Controlled Component & Uncontrolled component:
===================================================

-> An input form element whose value is controlled by React in this way is called a “controlled input or Controlled Component”.

-> The alternative is uncontrolled inputs or components, where form data is handled by the DOM itself. 


event.preventDefault()
=======================================================
The event.preventDefault() method stops the default action of an element from happening.


install style components:
===============================================

npm install --save styled-components


React fragment
==================================

The limitation with JSX is that, you cannot return multiple root jsx, and it has to be just one. This is a JavaScript feature because you can only return one thing.

react ref 
==============================

React Refs are a useful feature that act as a means to reference a DOM element or a class component from within a parent component. This then give us a means to read and modify that element.

useReducer()
==============================

The useReducer(reducer, initialState) hook accept 2 arguments: the reducer function and the initial state. The hook then returns an array of 2 items: the current state and the dispatch function.


note:(more about hook)===>https://reactjs.org/docs/hooks-reference.html



hook in react 
================================

1) useState:-----

-> The React useState Hook allows us to track state in a function component.
-> It re-renders component for update value.

2) useeffect hook:----

-> The useEffect Hook allows you to perform side effects in your components.
-> The word effect refers to a functional programming term called a "side effect".

useEffect() hook accepts 2 arguments:
useEffect(callback[, dependencies]);

3) React Context:-----

-> React Context is a way to manage state globally.

-> It can be used together with the useState Hook to share state between deeply nested components more easily than with useState alone.


react Redux:
============================

->React Redux is the official React UI bindings layer for Redux.

-> it is third part library.

->It allows React components to read data from a Redux Store, and dispatch Actions to the Store to update data.


react router:
============================================


npm install react-router-dom@5

npm install react-router-dom@latest //for install latest version

NavLink:
========================

->NavLink is similar to Link, but it has the ability to add additional styling attributes to the element.

-> router hook

useHistory
useParams
useLocation
useRouteMatch


useHistory:
================================

-> it is router hook.

-> The useHistory hook gives you access to the history instance that you may use to navigate.

useLocation:
=======================================

the purpose useLocation() is getting information from the current route, and it will return these attributes.


next js:
==================================================

-> a fullstack framwork for reactjs

-> Next.js is a flexible React framework that gives you building blocks to create fast web applications.

-> Next.js is a React framework that allows you to build supercharged, SEO-friendly, and extremely user-facing static websites and web applications using the React framework.

create project:

npx create-next-app

//run project
npm run dev

Why Use Next.js:
--------------------

1) Image Optimizations
-> Image optimization is a powerful feature prebuilt into Next.js because managing and optimizing images requires many configurations, and manually optimizing images can take a toll on your productive time.

2) Internationalization
-> Creating an enterprise application can easily be used and translated into different languages worldwide. This feature is an addition to Next.js and makes Next.js internationally recognized because it takes less configuration to get internalization set up.

3) Next.js Analytics
->Next.js provides an analytical dashboard that can be configured to show accurate visitor data and page insights from out of the box.

4) Zero Config
->Next.js compiles and builds automatically with hot refresh without any extra configuration from you, and it automatically scales and optimizes your production application.

5)Prebuilt SSR, SSG, and CSR Support
->With Next.js, you support server-side rendering, static generation, and client-side rendering in one application. You can decide the type of application you want to build and how you intend to compile your application to best suit your use case.

Apps Using Next.js:
---------------------

1)TikTok
2)Hashnode -- online blogging platform
3)Twitch Mobile -- social platform
4)Hulu -- similar to Netflix
5)Binance -- cryptocurrency portal

Features of Next.js:
------------------------

